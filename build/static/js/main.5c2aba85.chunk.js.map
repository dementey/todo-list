{"version":3,"sources":["actions/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","components/Picker.js","components/AddTodoComponent.js","containers/AddTodoLink.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","components/AppBar.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","withStyles","theme","button","margin","spacing","unit","input","display","_ref","active","children","onClick","classes","react_default","a","createElement","Button_default","disabled","className","variant","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Link","root","flexGrow","style","padding","Grid_default","container","item","xs","sm","FilterLink","color","pickerArray","value","label","SimpleSelect","priority","_this","props","val","name","handleChange","event","setState","Object","defineProperty","target","cb","_this2","this","FormControl_default","formControl","InputLabel_default","ref","InputLabelRef","htmlFor","Select_default","onChange","inputProps","id","map","option","MenuItem_default","key","React","Component","paper","textAlign","palette","text","secondary","textField","marginLeft","marginRight","width","fabButton","position","zIndex","left","right","description","time","onSubmitt","picker","onSubmit","e","preventDefault","trim","result","allPickerArray","defaultValue","Paper_default","TextField_default","inputRef","node","InputProps","startAdornment","InputAdornment_default","Assignment_default","Description_default","AccessTime_default","AssignmentLate_default","Picker","currentSelected","mini","aria-label","Add_default","val1","val2","AddTodoComponent","Todo","completed","GridListTile_default","textDecoration","Card_default","CardContent_default","Typography_default","gutterBottom","react","todos","toggleTodo","todo","components_Todo","assign","t","Error","getVisibleTodos","TodoList","AppBar_default","Toolbar_default","IconButton_default","Timeline_default","App","components_AppBar","AddTodoLink","VisibleTodoList","components_Footer","arguments","length","undefined","action","toConsumableArray","concat","objectSpread","combineReducers","store","createStore","rootReducer","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5c2aba85.chunk.js","sourcesContent":["let nextTodoId = 0\nexport const addTodo = (text, result) => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text,\n  result\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE',\n  SHOW_PRIORITY: 'SHOW_PRIORITY',\n  SHOW_TIME: 'SHOW_TIME',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nconst Link = ({ active, children, onClick, classes}) => (\n    <Button\n       onClick={onClick}\n       disabled={active}\n       className={classes.button}\n       variant=\"contained\"\n    >\n      {children}\n    </Button>\n \n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n \n}\n\nexport default withStyles(styles)( Link);\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FilterLink from '../containers/FilterLink'\r\nimport { VisibilityFilters } from '../actions'\r\nimport Grid from '@material-ui/core/Grid';\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst Footer = (classes) => (\r\n  <div className={classes.root} style={{ padding: 20 }}>\r\n  <Grid container spacing={24}>\r\n    <Grid item xs={12} sm={3}>\r\n      <FilterLink filter={VisibilityFilters.SHOW_ALL}>\r\n        All\r\n    </FilterLink>\r\n      <FilterLink filter={VisibilityFilters.SHOW_ACTIVE} color=\"secondary\">\r\n        Active\r\n    </FilterLink>\r\n      <FilterLink filter={VisibilityFilters.SHOW_COMPLETED} color=\"primary\">\r\n        Completed\r\n    </FilterLink>\r\n    </Grid>\r\n\r\n    <Grid item xs={12} sm={3}>\r\n      <FilterLink filter={VisibilityFilters.SHOW_TIME} color=\"primary\">\r\n        TIME 7:30\r\n    </FilterLink>\r\n      <FilterLink filter={VisibilityFilters.SHOW_PRIORITY} color=\"primary\">\r\n        Priotity 1-DoNow\r\n    </FilterLink>\r\n    </Grid>\r\n\r\n  </Grid >\r\n  </div>\r\n)\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst pickerArray = [\r\n  {\r\n    value: '101',\r\n    label: '1-DoNow',\r\n  },\r\n  {\r\n    value: '102',\r\n    label: '2-DoNext',\r\n  },\r\n  {\r\n    value: '103',\r\n    label: '3-DoSoon',\r\n  },\r\n  {\r\n    value: '104',\r\n    label: '4-Waiting',\r\n  },\r\n  {\r\n    value: '105',\r\n    label: '5-DoSomeDay',\r\n  },\r\n  {\r\n    value: '106',\r\n    label: '6-OnHoldy',\r\n  },\r\n];\r\n\r\nclass SimpleSelect extends React.Component {\r\n  state = {\r\n    priority: this.props.val,\r\n    name: '',\r\n\r\n  };\r\n\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.props.cb(event.target.value, pickerArray);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel\r\n          ref={ref => {\r\n            this.InputLabelRef = ref;\r\n          }}\r\n          htmlFor=\"priority-simple\"\r\n        >\r\n          Приоритет\r\n          </InputLabel>\r\n        <Select\r\n          value={this.state.priority}\r\n          onChange={this.handleChange}\r\n          inputProps={{\r\n            name: 'priority',\r\n            id: 'input-with-icon-grid',\r\n          }}\r\n        >\r\n          {pickerArray.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl >\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nSimpleSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n\r\n};\r\n\r\nexport default withStyles()(SimpleSelect);","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Assignment from '@material-ui/icons/Assignment';\r\nimport Description from '@material-ui/icons/Description';\r\nimport AccessTime from '@material-ui/icons/AccessTime';\r\nimport AssignmentLate from '@material-ui/icons/AssignmentLate';\r\nimport SimpleSelect from './Picker';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 'auto',\r\n\r\n  },\r\n  fabButton: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto',\r\n  },\r\n});\r\n\r\n\r\nconst pickerArray = [\r\n  {\r\n    value: '101',\r\n    label: '1-DoNow',\r\n  },\r\n  {\r\n    value: '102',\r\n    label: '2-DoNext',\r\n  },\r\n  {\r\n    value: '103',\r\n    label: '3-DoSoon',\r\n  },\r\n  {\r\n    value: '104',\r\n    label: '4-Waiting',\r\n  },\r\n  {\r\n    value: '105',\r\n    label: '5-DoSomeDay',\r\n  },\r\n  {\r\n    value: '106',\r\n    label: '6-OnHoldy',\r\n  },\r\n];\r\n\r\n\r\nconst AddTodoComponent = ({ onSubmitt, classes }) => {\r\n  let name\r\n  let description\r\n  let time\r\n  let picker = \"101\"\r\n\r\n  function priorityFunction(currentSelected) {\r\n    picker = currentSelected;\r\n  };\r\n\r\n  return (\r\n\r\n    <div className={classes.root} style={{ padding: 20 }}>\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        if (!name.value.trim() || !description.value.trim() || !time.value || !picker) {\r\n          return\r\n        }\r\n\r\n        var result = { name: name.value, description: description.value, time: time.value, priority: { picker: picker, allPickerArray: pickerArray } }\r\n        onSubmitt(name.value, result);\r\n        name.defaultValue = 'Домашние питомцы'\r\n        description.defaultValue = 'Выгулять '\r\n        time.defaultValue = '07:30'\r\n      }}>\r\n        <Grid container spacing={8}>\r\n          <Grid item xs={12} sm={3}>\r\n            <Paper className={classes.paper}>\r\n              <TextField className={classes.textField}\r\n                id=\"input-with-icon-grid\" label=\"Название\"\r\n                defaultValue='Домашние питомцы'\r\n                inputRef={node => name = node}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Assignment />\r\n                    </InputAdornment>\r\n                  ),\r\n                }} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Paper className={classes.paper}>\r\n\r\n              <TextField className={classes.textField}\r\n                id=\"input-with-icon-grid\"\r\n                label=\"Oписание\"\r\n                defaultValue='Выгулять собаку'\r\n                inputRef={node => description = node}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Description />\r\n                    </InputAdornment>\r\n                  ),\r\n                }} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Paper className={classes.paper}>\r\n              <TextField className={classes.textField}\r\n                id=\"input-with-icon-grid\"\r\n                label=\"Время\"\r\n                type=\"time\"\r\n                defaultValue=\"07:30\"\r\n                inputRef={node => time = node}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <AccessTime />\r\n                    </InputAdornment>\r\n                  ),\r\n                }} /></Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Paper className={classes.paper}>\r\n              <AssignmentLate />\r\n              <SimpleSelect className={classes.textField}\r\n                val={picker}\r\n                cb={priorityFunction}\r\n              ></SimpleSelect></Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} >\r\n            <Button type='submit' variant=\"fab\" mini color=\"primary\" aria-label=\"Add\" className={classes.fabButton} >\r\n              <AddIcon />\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nAddTodoComponent.propTypes = {\r\n  onSubmitt: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n}\r\nexport default withStyles(styles)(AddTodoComponent);\r\n\r\n\r\n\r\n\r\n","import { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\nimport AddTodoComponent from '../components/AddTodoComponent'\r\n\r\nconst mapStateToProps = state => ({\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmitt: (val1, val2) => dispatch(addTodo(val1, val2))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddTodoComponent)\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst Todo = ({ onClick, completed, result, id }) => (\r\n  <Grid item xs={12} sm={3}>\r\n    <Paper>\r\n      <GridListTile\r\n        onClick={onClick}\r\n        style={{\r\n          textDecoration: completed ? 'line-through' : 'none'\r\n        }}\r\n      >\r\n        <Card >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              №{id + 1} {result.name}\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n              {result.description}\r\n            </Typography>\r\n            <Typography color=\"secondary\" gutterBottom>\r\n              {result.time}\r\n            </Typography>\r\n            <Typography color=\"primary\" gutterBottom>\r\n              <Fragment>{result.priority.allPickerArray.map(option => (\r\n                result.priority.picker === option.value ? option.label : true))}</Fragment>\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </GridListTile>\r\n    </Paper>\r\n  </Grid>\r\n)\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  result: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst TodoList = ({ todos, toggleTodo, classes }) => (\r\n  <div className={classes.root} style={{ padding: 30 }}>\r\n    <Grid container spacing={8}>\r\n      {todos.map(todo =>\r\n        <Todo\r\n          key={todo.id}\r\n          {...todo}\r\n          onClick={() => toggleTodo(todo.id)}\r\n        />\r\n      )}\r\n    </Grid>\r\n  </div>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    result: PropTypes.object.isRequired,\r\n  }).isRequired).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(TodoList);\r\n","import { connect } from 'react-redux'\n\nimport { toggleTodo } from '../actions'\nimport { VisibilityFilters } from '../actions'\n\nimport TodoList from '../components/TodoList'\n\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed)\n      case VisibilityFilters.SHOW_TIME:\n      return todos.filter(t => t.result.time===\"07:30\")\n      case VisibilityFilters.SHOW_PRIORITY:\n      return todos.filter(t => t.result.priority.picker===\"101\")\n      \n\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TimeLine from '@material-ui/icons/Timeline';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n      },\r\n};\r\n\r\nconst SimpleAppBar = (props) => {\r\n  const { classes } = props;\r\n\r\n  return(\r\n    <div className = { classes.root } >\r\n      <AppBar position=\"static\" >\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" aria-label=\"Menu\">\r\n            <TimeLine />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            TODO-LIST\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div >\r\n  );\r\n}\r\n\r\nSimpleAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleAppBar);","import React, { Fragment } from 'react'\nimport Footer from './Footer'\nimport AddTodo from '../containers/AddTodoLink'\nimport VisibleTodoList from '../containers/VisibleTodoList'\nimport SimpleAppBar from './AppBar';\n\nconst App = () => (\n  <Fragment>\n    <SimpleAppBar />\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </Fragment>\n)\n\nexport default App\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          result: action.result,\n          completed: false\n        }\n      ]\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        (todo.id === action.id)\n          ? {...todo, completed: !todo.completed}\n          : todo\n      )\n    default:\n      return state\n  }\n}\n\nexport default todos\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter\n","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n})\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}